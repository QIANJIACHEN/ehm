package com.cea.ehm.controller.manage;

import java.time.LocalDateTime;
import java.util.Map;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cea.ehm.bean.Role;
import com.cea.ehm.controller.BaseController;
import com.cea.ehm.service.RoleService;
import com.github.miemiedev.mybatis.paginator.domain.PageBounds;
import com.github.miemiedev.mybatis.paginator.domain.PageList;
import com.google.common.collect.Maps;

/**
 * 权限管理控制层
 */
@Controller
@RequestMapping(value = "/manage/manage")
public class ManageController extends BaseController {
	private Logger logger = Logger.getLogger(ManageController.class);
	@Autowired
	private RoleService roleService;

	/**
	 * 显示角色列表页面
	 */
	@RequestMapping(value = "/rolelist.do")
	public ModelAndView rolelist() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/manage/manage/rolelist");
		return mv;
	}

	/**
	 * 查询 角色 → 列表
	 * 
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/list.do")
	@ResponseBody
	public Map<String, Object> list(@RequestParam Map<String, String> reqPara) {
		logger.info("页面请求参数: " + reqPara);
		PageBounds pageBounds = handlePageInfoForManage(reqPara);
		String sEcho = reqPara.get("draw");
		// 条件参数
		Map<String, String> paramMap = Maps.newHashMap();
		PageList<Role> pageList = (PageList<Role>) roleService.getRoleList(paramMap, pageBounds);

		Pageable page = new PageRequest(pageBounds.getPage(), pageBounds.getLimit());
		Page<Role> content = new PageImpl<>(pageList, page, pageList.getPaginator().getTotalCount());
		Map<String, Object> map = Maps.newHashMap();
		map.put("data", pageList);
		map.put("iTotalRecords", content.getTotalElements());
		map.put("iTotalDisplayRecords", content.getTotalElements());
		map.put("sEcho", sEcho);
		map.put("draw", sEcho);
		return map;
	}

	/**
	 * 保存或更新角色信息
	 * 
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/saveOrUpdate.do")
	@ResponseBody
	public Map<String, Object> saveOrUpdate(@RequestParam Map<String, String> reqPara) {
		logger.info("待编辑角色信息: " + reqPara);
		String id = reqPara.get("id");
		String name = reqPara.get("name");
		String pId = reqPara.get("pId");
		String status = reqPara.get("status");
		String remark = reqPara.get("remark");
		String listorder = reqPara.get("listorder");

		Role role = new Role();
		role.setId(id);
		role.setName(name);
		role.setpId(pId);
		role.setStatus(status);
		role.setRemark(remark);
		role.setCtime(LocalDateTime.now().toString().replace("T", " "));
		role.setUtime(LocalDateTime.now().toString().replace("T", " "));
		role.setListorder(listorder);

		roleService.saveOrUpdate(role);
		return null;
	}

	/**
	 * 删除角色信息
	 * 
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/delete.do")
	@ResponseBody
	public Map<String, Object> delete(@RequestParam Map<String, String> reqPara) {
		logger.info("待删除角色信息: " + reqPara);
		String id = reqPara.get("id");
		Role role = new Role();
		role.setId(id);
		roleService.delete(role);
		return null;
	}

}
