package com.cea.ehm.controller.manage;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cea.ehm.bean.Activity;
import com.cea.ehm.controller.BaseController;
import com.cea.ehm.service.ActivityService;
import com.github.miemiedev.mybatis.paginator.domain.PageBounds;
import com.github.miemiedev.mybatis.paginator.domain.PageList;
import com.google.common.collect.Maps;

@Controller
@RequestMapping(value = "/manage/activity")
public class ActivityController extends BaseController {
	@Autowired
	ActivityService activityService;

	@RequestMapping(value = "activityTable1.do")
	public ModelAndView activitytable() {
		return null;
	}
	
	@RequestMapping(value = "/delete.do")
	@ResponseBody
	public   Map<String, Object> delete(@RequestParam Map<String,String>reqPara){
		Integer id =Integer.parseInt(reqPara.get("id"));
		Activity activity = new Activity();
		activity.setId(id);
		activityService.delete(activity);
		return null;
	}
	
	@RequestMapping(value = "/update.do")
	@ResponseBody
	public Map<String, Object> update(@RequestParam Map<String,String>reqData){
		Integer type = Integer.parseInt(reqData.get("type"));
		Integer id = Integer.parseInt(reqData.get("id"));
		Integer onDate = Integer.parseInt(reqData.get("onDate"));
		Integer onEtsn = Integer.parseInt(reqData.get("onEtsn"));
		Integer onEcsn = Integer.parseInt(reqData.get("onEcsn"));
		Integer onPtsn = Integer.parseInt(reqData.get("onPtsn"));
		Integer onPcsn = Integer.parseInt(reqData.get("onPcsn"));
		String engSnUsed = reqData.get("engSnUsed");
		String lptn1Pn = reqData.get("lptn1Pn");
		String lptn1Sn = reqData.get("lptn1Sn");
		String engPn = reqData.get("engPn");
		String limitSpecial = reqData.get("limitSpecial");
		String code = reqData.get("code");
		String remark = reqData.get("remark");
		Activity activity = new Activity();
		activity.setId(id);
		activity.setOnDate(onDate);
		activity.setOnEtsn(onEtsn);
		activity.setOnEcsn(onEcsn);
		activity.setOnPtsn(onPtsn);
		activity.setOnPcsn(onPcsn);
		activity.setEngPn(engPn);
		activity.setEngSnUsed(engSnUsed);
		activity.setLimitSpecial(limitSpecial);
		activity.setLptn1Pn(lptn1Pn);
		activity.setLptn1Sn(lptn1Sn);
		activity.setCode(code);
		activity.setRemark(remark);
		if(type == 1) {
			activityService.update(activity);
		}else {
			activityService.add(activity);
		}
		
		return null;
	}
	/**
	 * 活动历史列表
	 **/
	@RequestMapping(value = "activityList.do")
	public ModelAndView activitylist() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/manage/activity/activityList");
		return mv;
	}

	/**
	 * 活动列表数据
	 **/
	@RequestMapping(value = "activityinfo.do")
	@ResponseBody
	public Map<String, Object> list(@RequestParam Map<String, String> reqPara) {
		PageBounds pageBounds = handlePageInfoForManage(reqPara);
		// ？？
		String sEcho = reqPara.get("draw");
		// 条件参数
		String key = reqPara.get("key");
		Map<String, String> paramMap = Maps.newHashMap();
		//paramMap.put("username", key);

		PageList<Activity> pageList = (PageList<Activity>) activityService.getActivityList(paramMap, pageBounds);
		Pageable page = new PageRequest(pageBounds.getPage(), pageBounds.getLimit());
		Page<Activity> content = new PageImpl<>(pageList, page, pageList.getPaginator().getTotalCount());

		Map<String, Object> map = Maps.newHashMap();
		map.put("data", pageList);
		map.put("iTotalRecords", content.getTotalElements());
		map.put("iTotalDisplayRecords", content.getTotalElements());
		map.put("sEcho", sEcho);
		map.put("draw", sEcho);
		return map;
	}

	@RequestMapping(value = "activityHistory.do")
	public ModelAndView activityHistory() {
		ModelAndView mv = new ModelAndView();
		mv.setViewName("/manage/activity/activityList");
		return mv;
	}

}
