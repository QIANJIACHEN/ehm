package com.cea.ehm.service;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cea.ehm.bean.DataPlane;
import com.cea.ehm.bean.Duty;
import com.cea.ehm.dao.DataPlaneMapper;
import com.cea.ehm.dao.DutyMapper;
import com.github.miemiedev.mybatis.paginator.domain.PageBounds;
import com.github.miemiedev.mybatis.paginator.domain.PageList;
import com.google.common.collect.Maps;

/**
 * 飞机信息服务层
 */
@Service
public class DataPlaneService {
	private Logger logger = Logger.getLogger(DataPlaneService.class);
	@Autowired
	private DataPlaneMapper dataplaneMapper;
	@Autowired
	private DutyMapper dutyMapper;

	/**
	 * 查询飞机信息列表
	 * 
	 * @param paramMap
	 * @param pageBounds
	 * @return
	 */
	public PageList<DataPlane> getdataplaneList(Map<String, String> paramMap, PageBounds pageBounds) {
		logger.info("数据库查询参数：" + paramMap);
		PageList<DataPlane> dataplaneList = dataplaneMapper.getdataplaneList(paramMap, pageBounds);
		// 提取所有的基地ID 和基地名
		List<Duty> allDuty = dutyMapper.getAllDuty();
		Map<Integer, String> dutyMap = Maps.newHashMap();
		allDuty.forEach(duty -> dutyMap.put(duty.getId(), duty.getName()));
		for (DataPlane dataplane : dataplaneList) {
			String dutyName = dutyMap.get(dataplane.getDuty());
			dataplane.setDutyName(Optional.ofNullable(dutyName).orElse("-"));
		}
		return dataplaneList;
	}

	/**
	 * 查询飞机信息
	 * 
	 * @param dataplane
	 */
	public DataPlane select(DataPlane dataplane) {
		return dataplaneMapper.select(dataplane);
	}

	/**
	 * 保存飞机信息
	 * 
	 * @param dataplane
	 */
	public void save(DataPlane dataplane) {
		dataplaneMapper.insert(dataplane);
	}

	/**
	 * 更新飞机信息
	 * 
	 * @param dataplane
	 */
	public void update(DataPlane dataplane) {
		dataplaneMapper.update(dataplane);
	}

	/**
	 * 删除飞机信息
	 * 
	 * @param dataplane
	 */
	public void delete(DataPlane dataplane) {
		// 这里是物理删除，删除后信息从数据库消失
		dataplaneMapper.delete(dataplane);
	}
	

	
}
