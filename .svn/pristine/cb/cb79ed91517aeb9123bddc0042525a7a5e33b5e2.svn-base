package com.cea.ehm.controller.manage;

import java.util.Map;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.cea.ehm.bean.RecordEngSvSchedule;
import com.cea.ehm.controller.BaseController;
import com.cea.ehm.service.RecordEngSvScheduleService;
import com.github.miemiedev.mybatis.paginator.domain.PageBounds;
import com.github.miemiedev.mybatis.paginator.domain.PageList;
import com.google.common.base.Strings;
import com.google.common.collect.Maps;

/* *
 * 发动机维修记录控制器
 */
@Controller
@RequestMapping(value = "manage/recordengsvschedule")
public class RecordEngSvScheduleController extends BaseController {
	private Logger logger = Logger.getLogger(RecordEngSvSchedule.class); 
	@Autowired
	private RecordEngSvScheduleService recordEngSvScheduleService;
	/* *
	 * 显示发动机维修列表界面
	 */
	@RequestMapping(value = "/recordengsvschedulelist.do")
	public ModelAndView recordEngSvScheduleList()
	{
		ModelAndView mv = new ModelAndView();
		mv.setViewName("manage/recordengsvschedule/recordengsvschedulelist");
		return mv;
	}
	
	/**
	 * 查询发动机维修→ 列表
	 * 
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/list.do")
	@ResponseBody
	public Map<String, Object> list(@RequestParam Map<String, String> reqPara) {
		logger.info("页面请求参数: " + reqPara);
		PageBounds pageBounds = handlePageInfoForManage(reqPara);
		// ？？
		String sEcho = reqPara.get("draw");
		// 条件参数
		String key = reqPara.get("key");
		Map<String, String> paramMap = Maps.newHashMap();
		paramMap.put("removeDate", key);

		PageList<RecordEngSvSchedule> pageList = (PageList<RecordEngSvSchedule>) recordEngSvScheduleService.getRecordEngSvScheduleList(paramMap, pageBounds);

		Pageable page = new PageRequest(pageBounds.getPage(), pageBounds.getLimit());
		Page<RecordEngSvSchedule> content = new PageImpl<>(pageList, page, pageList.getPaginator().getTotalCount());

		Map<String, Object> map = Maps.newHashMap();
		map.put("data", pageList);
		map.put("iTotalRecords", content.getTotalElements());
		map.put("iTotalDisplayRecords", content.getTotalElements());
		map.put("sEcho", sEcho);
		map.put("draw", sEcho);
		return map;
	}
	
	/*
	 * 保存发动机维修信息
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/save.do")
	@ResponseBody
	public Map<String, Object> save(@RequestParam Map<String, String> reqPara) {
		RecordEngSvSchedule recordEngSvSchedule = getRecordEngSvSchedule(reqPara);
		recordEngSvScheduleService.save(recordEngSvSchedule);
		return getSuccessMessage();
	}
	
	/*
	 * 获取维修记录信息
	 * 
	 * @param reqPara
	 * @return
	 */
	public RecordEngSvSchedule getRecordEngSvSchedule(Map<String, String> reqPara) {
		logger.info("获取到的发动机维修记录信息：" + reqPara);
		
		String id = reqPara.get("id");
		String removeDate = reqPara.get("removeDate");
		System.out.println("removeDate: "+ removeDate);
		String factory = reqPara.get("factory");
		String arrived = reqPara.get("arrived");
		String induction= reqPara.get("induction");
		String completePlan= reqPara.get("completePlan");
		String complete= reqPara.get("complete");
		String ship= reqPara.get("ship");
		String cost= reqPara.get("cost");
		String tat= reqPara.get("tat");
		
		RecordEngSvSchedule recordEngSvSchedule = new RecordEngSvSchedule();
		
		if (!Strings.isNullOrEmpty(id)) {
			recordEngSvSchedule.setId(Integer.parseInt(id));
		}
		recordEngSvSchedule.setRemoveDate(removeDate);
		recordEngSvSchedule.setFactory(factory);
		recordEngSvSchedule.setArrived(arrived);
		recordEngSvSchedule.setInduction(induction);
		recordEngSvSchedule.setCompletePlan(completePlan);
		recordEngSvSchedule.setComplete(complete);
		recordEngSvSchedule.setShip(ship);
		recordEngSvSchedule.setCost(cost);
		recordEngSvSchedule.setTat(tat);
		return recordEngSvSchedule;
	}
	
	/*
	 * 更新发动机维修信息记录
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/update.do")
	@ResponseBody
	public Map<String, Object> update(@RequestParam Map<String, String> reqPara) {
		RecordEngSvSchedule recordEngSvSchedule = getRecordEngSvSchedule(reqPara);
		recordEngSvScheduleService.update(recordEngSvSchedule);
		return getSuccessMessage();
	}
	
	/*
	 * 更新发动机维修信息
	 * @param reqPara
	 * @return
	 */
	@RequestMapping(value = "/delete.do")
	@ResponseBody
	public Map<String, Object> delete(@RequestParam Map<String, String> reqPara) {
		RecordEngSvSchedule recordEngSvSchedule = getRecordEngSvSchedule(reqPara);
		recordEngSvScheduleService.delete(recordEngSvSchedule);
		return getSuccessMessage();
	}
	
}